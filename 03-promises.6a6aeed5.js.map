{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,UAClCK,MAAON,SAASO,iBAAiB,UAKnC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUP,MAAAQ,IAEpBG,EAAO,CAAEK,SAAAT,EAAUP,MAAAQ,GAAQ,GAE5BA,EAAM,IAERS,MAAK,EAACD,SAAEA,EAAQhB,MAAEA,MACjBN,EAAAwB,OAAOC,QAAQ,uBAAqBH,QAAiBhB,MAAU,IAEhEoB,OAAM,EAACJ,SAAEA,EAAQhB,MAAEA,MAClBN,EAAAwB,OAAOG,QAAQ,sBAAoBL,QAAehB,MAAU,G,CAlBlEJ,EAAKC,KAAKyB,iBAAiB,UAsB3B,SAAsBC,GACpBA,EAAEC,iBACF,IAAIC,EAAYC,SAAS9B,EAAKI,MAAM2B,OAChCC,EAAe,EACnB,IAAK,IAAIC,EAAQ,EAAGA,EAAQjC,EAAKM,OAAOyB,MAAOE,GAAS,EAClDA,EAAQ,IACVJ,GAAaC,SAAS9B,EAAKK,KAAK0B,OAChCC,GAAgB,GAElBtB,EAAcsB,EAAcH,GAE9BF,EAAEO,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n  input: document.querySelectorAll('input'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let userDelay = parseInt(refs.delay.value);\n  let userPosition = 1;\n  for (let index = 0; index < refs.amount.value; index += 1) {\n    if (index > 0) {\n      userDelay += parseInt(refs.step.value);\n      userPosition += 1;\n    }\n    createPromise(userPosition, userDelay);\n  }\n  e.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","submitBtn","input","querySelectorAll","$47d4ff9957288465$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","Notify","success","catch","failure","addEventListener","e","preventDefault","userDelay","parseInt","value","userPosition","index","currentTarget","reset"],"version":3,"file":"03-promises.6a6aeed5.js.map"}