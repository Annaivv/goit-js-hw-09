{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,UAClCK,MAAON,SAASO,iBAAiB,UAKnC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUP,MAAAQ,IAEpBG,EAAO,CAAEK,SAAAT,EAAUP,MAAAQ,G,GAEpBA,E,IAEFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MACjBN,EAAAyB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANrB,EAAM,M,IAE9DsB,OAAM,SAAAJ,G,IAAGF,EAAQE,EAARF,SAAUhB,EAAKkB,EAALlB,MAClBN,EAAAyB,OAAOI,QAAQ,sBAAqCF,OAAfL,EAAS,QAAYK,OAANrB,EAAM,M,IAlBhEJ,EAAKC,KAAK2B,iBAAiB,UAsB3B,SAAsBC,GACpBA,EAAEC,iBAGF,IAFA,IAAIC,EAAYC,SAAShC,EAAKI,MAAM6B,OAChCC,EAAe,EACVC,EAAQ,EAAGA,EAAQnC,EAAKM,OAAO2B,MAAOE,GAAS,EAClDA,EAAQ,IACVJ,GAAaC,SAAShC,EAAKK,KAAK4B,OAChCC,GAAgB,GAElBxB,EAAcwB,EAAcH,GAE9BF,EAAEO,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button'),\n  input: document.querySelectorAll('input'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let userDelay = parseInt(refs.delay.value);\n  let userPosition = 1;\n  for (let index = 0; index < refs.amount.value; index += 1) {\n    if (index > 0) {\n      userDelay += parseInt(refs.step.value);\n      userPosition += 1;\n    }\n    createPromise(userPosition, userDelay);\n  }\n  e.currentTarget.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submitBtn","input","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","Notify","success","concat","catch","failure","addEventListener","e","preventDefault","userDelay","parseInt","value","userPosition","index","currentTarget","reset"],"version":3,"file":"03-promises.864a25a0.js.map"}